name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.package-version.outputs.version }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Read package.json
      uses: tyankatsu0105/read-package-version-actions@v1
      id: package-version

    - name: Show version number
      run: echo "Version is ${{ steps.package-version.outputs.version }}"

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ steps.package-version.outputs.version }}"
        release_name: Release ${{ steps.package-version.outputs.version }}


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        goos: [linux, arm]
        goarch: ["386", amd64]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build binary
      uses: wangyoucao577/go-release-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.14.7.linux-amd64.tar.gz"

    - name: Upload binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./build/gorkscrew
        asset_name: gorkscrew
        extra_files: README.md
        # asset_content_type: application/zip
